version: "3.6"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.2
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: LISTENER_1://kafka:9092,LISTENER_2://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_1://kafka:9092,LISTENER_2://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_1:PLAINTEXT,LISTENER_2:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
  
  kafka-connect:
    image: quay.io/debezium/connect:2.6
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mongo
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: "debezium.my_connect_configs"
      OFFSET_STORAGE_TOPIC: "debezium.my_connect_offsets"
      STATUS_STORAGE_TOPIC: "debezium.my_connect_statuses"
      # CONNECT_PLUGIN_PATH: "/usr/share/java"
      # CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      # CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      # CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

  mongo:
    image: mongo:3.6.23
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    logging:
      driver: none
    volumes:
        - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

      # KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      # KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: SCRAM-SHA-512
      # KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required username="kafkaUser" password="kafkaPassword";
      # KAFKA_CLUSTERS_0_PROPERTIES_PROTOCOL: SASL
