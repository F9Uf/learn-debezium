version: "3.6"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.2.2
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: LISTENER_1://kafka:9092,LISTENER_2://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_1://kafka:9092,LISTENER_2://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_1:PLAINTEXT,LISTENER_2:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
  
  kafka-connect:
    image: quay.io/debezium/connect:2.6
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mongo
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: "debezium.my_connect_configs"
      OFFSET_STORAGE_TOPIC: "debezium.my_connect_offsets"
      STATUS_STORAGE_TOPIC: "debezium.my_connect_statuses"
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      # CONNECT_PLUGIN_PATH: "/usr/share/java"
      # CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      # CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      # CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"

  mongo:
    image: mongo:6.0.3
    command: [--replSet, rs0, --bind_ip_all, --port, "27017"]
    ports:
      - 27017:27017

  mongo-setup:
    image: mongo:6.0.3
    working_dir: /app
    depends_on:
      - mongo
    entrypoint:
      [
        "bash",
        "-c",
        "sleep 10 && mongosh --host mongo:27017 /app/config-replica.js && sleep 10 && mongosh --host mongo:27017 /app/mongo-init.js && sleep 10",
      ]
    volumes:
      - ./conf/mongodb/config-replica.js:/app/config-replica.js
      - ./conf/mongodb/mongo-init.js:/app/mongo-init.js
    restart: "no"

  redpanda:
    image: docker.redpanda.com/redpandadata/console:v2.2.3
    container_name: redpanda
    restart: always
    ports:
      - '8888:8080'
    environment:
      - CONFIG_FILEPATH=/app/redpanda/config.yaml
    depends_on:
      - kafka
      - zookeeper
    volumes:
      - ./conf/redpanda/config.yaml:/app/redpanda/config.yaml
